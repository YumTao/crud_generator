<template>
  <div class="mod-config">
    <el-form :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName && $column.columnName != "create_time" && $column.columnName != "update_time")
     <el-form-item>
#if($column.attrType == "String")
      <el-input v-model="dataForm.$column.attrname" placeholder="$column.comments" clearable></el-input>
#elseif($column.attrType == "Integer")
      <el-select v-model="dataForm.$column.attrname" placeholder="$column.comments">
       <el-option v-for="item in ${column.attrname}Arr" :key="item.value" :label="item.label" :value="item.value"/>
      </el-select>
#else
#end
     </el-form-item>
#end
#end
     <el-form-item>
      <el-button type="primary" @click="resetQuery()">重置条件</el-button>
     </el-form-item>
     <el-form-item>
      <el-button @click="getDataList()">查询</el-button>
      <el-button type="primary" @click="addOrUpdateHandle()">新增</el-button>
      <el-button type="danger" @click="deleteHandle()" :disabled="dataListSelections.length <= 0">批量删除</el-button>
     </el-form-item>
    </el-form>
    <el-table
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <el-table-column
        type="selection"
        header-align="center"
        align="center"
        width="50">
      </el-table-column>
#foreach($column in $columns)
      <el-table-column prop="${column.attrname}" header-align="center" align="center" label="${column.comments}">
#if($column.attrType == "Date")
        <template slot-scope="scope">
          <span>{{ scope.row.${column.attrname} | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>
        </template>
#elseif($column.attrType == "Integer")
        <template slot-scope="scope">
            <span>{{ scope.row.${column.attrname} | getLabel(${column.attrname}Arr) }}</span>
        </template>
#else
#end
      </el-table-column>
#end
      <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
        <template slot-scope="scope">
          <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.${pk.attrname})">修改</el-button>
          <el-button type="text" size="small" @click="deleteHandle(scope.row.${pk.attrname})">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
  </div>
</template>

<script>
  import {
    fetchList,
    getInfo,
    save,
    update,
    deleteFun
  } from '@/api/${pathName}'
  import { parseTime, getLabel } from '@/utils'
  import AddOrUpdate from './${pathName}-add-or-update'
  export default {
    data() {
      return {
#foreach($column in $columns)
#if($column.attrType == "Integer")
        ${column.attrname}Arr: [{ label: '显示内容', value: 1 }],
#else
#end
#end
        dataForm: {},
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false
      }
    },
    components: {
      AddOrUpdate
    },
    activated() {
      this.getDataList()
    },
    methods: {
      // 查询条件重置
      resetQuery() {
          this.dataForm = {}
      },
      // 获取数据列表
      getDataList() {
        this.dataListLoading = true
        this.dataForm.currentPage = this.pageIndex
        this.dataForm.pageSize = this.pageSize
        console.log('fetch goods list request', this.dataForm)
        fetchList(this.dataForm).then(response => {
          var data = response.data
          /* eslint-disable */
          data = eval('(' + data + ')')
          this.dataList = data.list
          this.totalPage = data.total
          setTimeout(() => {
            this.dataListLoading = false
          }, 1.5 * 1000)
        })
      },
      // 每页数
      sizeChangeHandle(val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle(val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle(val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle(id) {
        this.addOrUpdateVisible = true
        #[[this.$nextTick(() => {]]#
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle(id) {
        var ids = id ? [id] : this.dataListSelections.map(item => {
          return item.${pk.attrname}
        })
        #[[this.$confirm(`确定对[id=${ids.join(',')}]进行[${id ? '删除' : '批量删除'}]操作?`, '提示', {]]#
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          deleteFun(ids).then(() => {
            this.$notify({
              title: 'Success',
              message: 'Delete Successfully',
              type: 'success',
              duration: 2000
            })
            this.getDataList()
          })
        })
      }
    }
  }
</script>
