package ${package}.${moduleName}.web.controller;

import java.util.Arrays;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.github.pagehelper.PageInfo;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import ${package}.${moduleName}.param.req.${className}PageRequest;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("api/${pathName}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public PageInfo<${className}Entity> list(@RequestBody ${className}PageRequest params){
        PageInfo<${className}Entity> page = ${classname}Service.queryPage(params);
        return page;
    }


    /**
     * 信息
     */
    @RequestMapping("/info")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public ${className}Entity info(@RequestBody ${className}Entity param){
		${className}Entity result = ${classname}Service.getById(param.getId());
        return result;
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public void save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    public void update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public void delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));
    }

}
